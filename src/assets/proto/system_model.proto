syntax = "proto3";

message LoginInfo {
	string login		= 1;
	string mac_address	= 3;	//PC mac_address
	string local_ip		= 4;	//local ip
}

message Account {
	int64 account_id 	= 1;
	string name 				= 2;
	int64 group_id 				= 3;
	bool enable_flg 			= 4;
	TradingRights trading_rights 			= 5;
	bool api_flg				= 6;
	int64 registered_date 		= 7;
	string comment 				= 8;
	string api_key 				= 9;
	string password = 10;
	string secret_key			= 11;	//trading pin

	// Setting notifications
	BoolFlag recv_admin_news_flg = 12;
	BoolFlag recv_match_noti_flg = 13;

	string email = 14;
	string phone = 15;

	BoolFlag enable_secret_key_flg = 16; // Setting enable trading PIN
	
	// Have to use enum with NONE value for bool flag because:
	// There's no way of telling whether a field was explicitly set to
	// the default value (for example whether a boolean was set to false) or just not set at all
	enum BoolFlag {BOOL_FLAG_NONE = 0; BOOL_FLAG_ON = 1; BOOL_FLAG_OFF = 2;}
	enum TradingRights {TRADING_RIGHTS_NONE = 0; TRADING_OPEN_ONLY = 1; TRADING_CLOSE_ONLY = 2; TRADING_NORMAL = 3; }
}

message AdminSettings {
	int64 gross_buy_limit	= 1;
	int64 gross_sell_limit	= 2;
}

message GroupAccount {
	int64 group_id 				= 1;
	string group_name			= 2;
	GroupType group_type		= 3;
	int64 max_order_volume 		= 4;
}

enum GroupType {
	GT_NONE		= 0;
	GT_LP		= 1;
	GT_RETAIL	= 2;
}

message AccountBalance {
	int64 account_id 			= 1;
	string balance				= 2;
	string collateral			= 3;
	string realized_pl			= 4;
	string margin_required		= 5;
	string margin_maintain		= 6;
	string margin_deficit		= 7;
	string unrealized_pl = 8;
	string buying_power = 9;
	string equity 		= 10;
	string withdrawable_amount = 11;
	string currency_code				=	12;
	string password 					=	13; // login password
}

message AccountPortfolio {
	int64 account_id 			= 1;
	string symbol_code			= 2;
	string owned_volume			= 3;
	string pending_volume		= 4;
	string avg_price			= 5;
	string market_price			= 6;
	string invested_value		= 7;
	string current_value		= 8;
	string realized_pl			= 9;
	string unrealized_pl 		= 10;
	string currency_code		= 11;
}

enum DealAction {
	DEAL_NONE		= 0;
	DEAL_BALANCE	= 2;
	DEAL_CREDIT		= 3;
	DEAL_CHARGE		= 4;
	DEAL_BUY 		= 5;
	DEAL_SELL		= 6;
	DEAL_COLLATERAL	= 7;
}

//return code
enum MsgCode {
	MT_RET_OK_NONE					= 0;
	MT_RET_OK						= 1;

	MT_RET_ERROR					= 2;
	MT_RET_ERR_PARAMS				= 3;	//invalid parameter
	MT_RET_ERR_PERMISSIONS			= 8;
	MT_RET_ERR_TIMEOUT				= 9;
	MT_RET_ERR_NOTFOUND				= 13;









	MT_RET_SUBCRIBE_OK				= 310;
	MT_RET_SUBCRIBE_ALREADY			= 311;
	MT_RET_SUBCRIBE_ERROR			= 312;

	MT_RET_UNSUBCRIBE_OK			= 320;
	MT_RET_UNSUBCRIBE_ERROR			= 322;

	MT_RET_AUTH_ACCOUNT_INVALID		= 1001;	//Invalid account
	MT_RET_AUTH_ACCOUNT_DISABLED	= 1002;	//Account is disabled

	MT_RET_REQUEST_INVALID_VOLUME	= 10014;
	MT_RET_ERR_NOT_ENOUGH_MONEY = 10019;
	MT_RET_REQUEST_INVALID_FILL		= 10030;
	MT_RET_REQUEST_LIMIT_VOLUME		= 10034;
	MT_RET_REQUEST_INVALID_ORDER_TYPE	= 10035;
	MT_RET_REQUEST_INVALID_LIMIT_PRICE		= 10036;
	MT_RET_REQUEST_INVALID_TRIGGER_PRICE		= 10037;
	MT_RET_REQUEST_PROHIBITED_OPEN_ORDER = 10038;
	MT_RET_REQUEST_PROHIBITED_CLOSE_ORDER = 10039;
	MT_RET_MARKET_CLOSED			= 10040;


}


